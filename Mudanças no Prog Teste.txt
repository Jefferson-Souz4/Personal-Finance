Evento OnCreate Form Padrão
PGC_1.TabIndex     := 0; //Inserido
TBS_Cadastro.TabVisible := False; //Inserido
TBS_Pesquisa.TabVisible := True; //Inserido

Botão Cancelar Execute
  PGC_1.TabIndex     := 0; //Inserido
  TBS_Cadastro.TabVisible := False; //Inserido
  TBS_Pesquisa.TabVisible := True; //Inserido

Botão Salvar
PGC_1.TabIndex     := 0; //Inserido
TBS_Cadastro.TabVisible := False; //Inserido
TBS_Pesquisa.TabVisible := True; //Inserido

Botão Novo
Comentar o código Original

PGC_1.TabIndex     := 0;
TBS_Cadastro.TabVisible := True;
TBS_Pesquisa.TabVisible := False;

comenta o Evento BS_PesquisaShow


--------------------------------------------------------------------
Procedure ContaRegistro Form Cad_Usuários

 if DM.CDS_tb_User.RecordCount = 0 then
     begin
       lb_Nun_reg.Visible := True;
       lb_Nun_reg.Caption :='';
       lb_Nun_reg.Caption := 'Nenhum Registro Encontrado';
       Sbtn_Imprimir.Enabled := False;

     end;

     if DM.CDS_tb_User.RecordCount = 1 then
     Begin
       lb_Nun_reg.Visible := True;
       lb_Nun_reg.Caption :='';
       lb_Nun_reg.Caption := IntToStr(DM.CDS_tb_User.RecordCount) +' '+ 'Registro Encontrado ';
       SBtn_Imprimir.Enabled := True;
     End;

     if DM.CDS_tb_User.RecordCount >1 then
     Begin
       lb_Nun_reg.Visible := True;
       lb_Nun_reg.Caption :='';
       lb_Nun_reg.Caption := IntToStr(DM.CDS_tb_User.RecordCount) +' '+ 'Registros Encontrados ';
       Sbtn_Imprimir.Enabled := True;
     End;

inserir botão Pesquisa
------------------------------------------------------------------------------------------------------
Procedure Buscartudo.
//Procedure BuscaTudo os Registros
  DM.CDS_tb_User.Close;
  DM.SQLtb_user.SQL.Clear;
  DM.SQLtb_user.SQL.Add('select * From tb_user');
  DM.CDS_tb_User.Open;
  ContaRegistro;

Botão Deletar
      Pesquisar
Evento OnCreate
  Buscartudo;
----------------------------------------------------------------------------------------------------------
DM
FDConctn.Params.Database := 'gerenciador_financeiro';
  FDConctn.Params.UserName := 'root';
  FDConctn.Params.Password := '123';

  FDConctn.Connected       := True;

  Driver.VendorLib := GetCurrentDir +'\lib\libmySQL.dll';

  FDtb_user.TableName := 'tb_user';
  FDtb_user.Active    := True

FDConnection - FDConctn
TFDTABLE - FDtb_user
TFDQUERY - SQLtb_user
DataSource - DStb_user
Driver
-------------------------------------------------------------
Function
Function GetVerifCadastroDuplicado (Login : String):Boolean;
Function GetVerifCadastroDuplicado (Login : String):Boolean;
  begin
  Result := False;
    With
    TSQLQuery.Create(nil) do
      Try
        SQLConnection :=DM.SQLConnection1;
        SQL.ADD('Select Id From tb_user Where Login = :Login');
        Params [0].AsString := Login;
        Open;
        if not IsEmpty then
            Result :=True;
      Finally
      Close;
      Free;
      End;

  end;

Salvar Execute
If GetVerifCadastroDuplicado(Trim(Edt_Login.Text)) then
     Application.MessageBox('Login já Cadastrado, por favor escolha Outro!!', 'Aviso', MB_OK+MB_ICONWARNING);
     Edt_Login.Setfocus;
Já inserido

----------------------------------------------------------------------------------------------------------------
Acima da Config Inserção 
if DS_TB.State in [dsInsert] then

Colocar no Botão Salvar
If (DS_TB.State in [dsInsert]) and (GetVerifCadastroDuplicado(Trim(Edt_Login.Text)))
---------------------------------------------------------
Form Padrão
Botão Novo
  Sbtn_Editar.Enabled:=False;
  Sbtn_Deletar.Enabled:=False;
  Sbtn_Pesquisar.Enabled:=False;
  Sbtn_Imprimir.Enabled:=False;

Botão Editar
  Sbtn_Pesquisar.Enabled:=False;
  Sbtn_Imprimir.Enabled:=False;

Botão Cancelar
  Sbtn_Novo.Enabled:=True;
  Sbtn_Editar.Enabled:=True;
  Sbtn_Deletar.Enabled:=True;
  Sbtn_Pesquisar.Enabled:=True;
  Sbtn_Imprimir.Enabled:=True;

Botão Pesquisar
Edt_Filtrar.SetFocus;

